---

- name: Verify node types and counts listed in servisParams will satisfy the requirements of the servisType being deployed
  hosts: localhost
  connection: local
  vars_files:
    - ../group_vars/{{ servis }}
  tasks:
    - name: Assert that there are two hosts labeled aptly and two hosts labeled jenkins
      assert:
        that:
          - "{{ servisParams.host_data|selectattr('labeling_group', 'equalto', 'aptly')|list|length() }} == 2"
          - "{{ servisParams.host_data|selectattr('labeling_group', 'equalto', 'jenkins')|list|length() }} == 2"



- name: add_host an alias of localhost into live inventory for each nodeType-provider combination
  hosts: localhost
  connection: local
  vars_files:
    - ../group_vars/{{ servis }}
  tasks:
    # it would be nice to be able to copy all the node attributes directly instead of (re)hard-coding all of them
    #- debug: var=item
    #  with_items: servisParams.host_data

    - name: Add localhost alias for each labeling_group<->provider combination
      add_host: hostname={{ item.labeling_group }}_on_{{ item.provider }} ansible_connection=local groupname={{ item.provider }}_play_hosts_selector_group
                type={{ item.labeling_group }} count={{ item.count }} roles_applied={{ item.roles_applied|default('') }}
      with_items: servisParams.host_data



- name: Create or persist hosts in IAAS providers
  hosts: awapne2_play_hosts_selector_group
  serial: 1  # this is required, else the hosts 'register:' the cloud module result over one another
  vars_files:
    - ../group_vars/{{ servis }}

  roles:
    - role: 'awapne2/awapne2_add'



- name: Create or persist hosts in IAAS providers
  hosts: raxord2_play_hosts_selector_group
  serial: 1  # this is required, else the hosts 'register:' the cloud module result over one another
  vars_files:
    - ../group_vars/{{ servis }}

  roles:
    - role: 'raxord2/raxord2_add'



- name: Add custom local admin accounts on instances (one time; new instances only)
  hosts: '{{ servis }}:&host_users_customized_False'
  remote_user: '{{ instanceInitialUser }}'
  sudo: yes
  roles:
    - role: add_custom_users



- name: Host-initialization role (only hosts not currently marked provisioned)
  hosts: '{{ servis }}:!host_provisioned_True'
  remote_user: '{{ deployUser }}'
  sudo: yes
  roles:
    - role: inithost



- name: Remove local instanceInitialUser admin account on instances (one time; new instances only)
  hosts: '{{ servis }}:&host_users_customized_False'
  remote_user: '{{ deployUser }}'
  sudo: yes
  roles:
    - role: remove_instanceInitialUser



- name: Common role
  hosts: '{{ servis }}'
  remote_user: '{{ deployUser }}'
  sudo: yes
  roles:
    - role: common



- name: Deploy LDAP
  hosts: "{{ servis }}_ldap!host_provisioned_True"
  remote_user: "{{ deployUser }}"
  sudo: yes

  roles:
    - openldap_server



- name: Deploy Jenkins
  hosts: "{{ servis }}_jenkins:!host_provisioned_True"
  remote_user: "{{ deployUser }}"
  sudo: yes

  roles:
    - ldap_auth_client
    - role: smola.java
      java_cleanup: False
      java_packages:
        - oracle-java8-installer
        - oracle-java8-set-default
    - jenkins



#- name: Deploy aptly
#  hosts: "{{ servis }}_aptly:!host_provisioned_True"
#  remote_user: "{{ deployUser }}"
#  sudo: yes
#
#  roles:

